#!/usr/bin/env ruby
require 'json'
require 'rest_client'

input = STDIN.read
STDIN.close_read

input = JSON.parse(input)
config = input['hook']['configuration']
username = input['node']['facts']['user']

if config['nodes_registered'].to_i.to_s != config['nodes_registered'].to_s
  puts({ 'error' => "Hook configuration `nodes_registered` must be an integer (was: #{config['nodes_registered']})" }.to_json)
  exit 1
else
  policy_counter = config['nodes_registered'].to_i
  next_policy_counter = policy_counter + 1
  # This could just as easily call an external system to retrieve the node's
  # hostname0.

  api_url = "http://commander.bellevuelab.isus.emc.com/hubot/vm/status"
  # req = Net::HTTP::Post.new uri.path
  api_payload = {"status" => "We have found a new vm. It was created by @#{username}."}

  # res = Net::HTTP.start(uri.host, uri.port) do |http|
  #   http.request req
  # end

  # Send packet to hubot
  req = RestClient::Request.execute( method: :post, url: api_url, verify_ssl: false, payload: api_payload, headers: { content_type: 'application/json'})

  output = {
      'hook' => {
          'configuration' => {
              'update' => {
                  'nodes_registered' => next_policy_counter
              }
          }
      }
  }
end

puts output.to_json
